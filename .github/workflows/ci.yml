name: CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - ".github/workflows/ci.yml"
      - "Dockerfile"
      - ".dockerignore"
      - "**/*.go"
      - "go.mod"
      - "go.sum"
  pull_request:
    branches: [main, develop]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run go vet
        run: go vet ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Build
        run: go build -v -o bin/feishu-github-tracker ./cmd/feishu-github-tracker

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: feishu-github-tracker-binary
          path: bin/feishu-github-tracker
          retention-days: 7

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: tag
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [ "${BRANCH}" = "main" ]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
          elif [ "${BRANCH}" = "develop" ]; then
          echo "tag=develop" >> $GITHUB_OUTPUT
          else
          echo "tag=skip" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.tag.outputs.tag != 'skip'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.tag.outputs.tag != 'skip'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.tag.outputs.tag != 'skip'
        uses: docker/build-push-action@v5
        with:
          provenance: false # Disable provenance to avoid unknown/unknown
          sbom: false # Disable sbom to avoid unknown/unknown
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
